//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Chupachupa_WebApp.PrivateService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RssChannelsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RssChannels {
            get {
                return this.RssChannelsField;
            }
            set {
                if ((this.RssChannelsField.Equals(value) != true)) {
                    this.RssChannelsField = value;
                    this.RaisePropertyChanged("RssChannels");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RssChannel", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class RssChannel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chupachupa_WebApp.PrivateService.Cloud CloudField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CopyrightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneratorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chupachupa_WebApp.PrivateService.Image ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LastBuildDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagingEditorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PubDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssCategory> RssCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long RssItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RssLinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.SkipDays> SkipDaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.SkipHours> SkipHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chupachupa_WebApp.PrivateService.TextInput TextInputField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TtlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebMasterField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chupachupa_WebApp.PrivateService.Cloud Cloud {
            get {
                return this.CloudField;
            }
            set {
                if ((object.ReferenceEquals(this.CloudField, value) != true)) {
                    this.CloudField = value;
                    this.RaisePropertyChanged("Cloud");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Copyright {
            get {
                return this.CopyrightField;
            }
            set {
                if ((object.ReferenceEquals(this.CopyrightField, value) != true)) {
                    this.CopyrightField = value;
                    this.RaisePropertyChanged("Copyright");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Docs {
            get {
                return this.DocsField;
            }
            set {
                if ((object.ReferenceEquals(this.DocsField, value) != true)) {
                    this.DocsField = value;
                    this.RaisePropertyChanged("Docs");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Generator {
            get {
                return this.GeneratorField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneratorField, value) != true)) {
                    this.GeneratorField = value;
                    this.RaisePropertyChanged("Generator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chupachupa_WebApp.PrivateService.Image Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LastBuildDate {
            get {
                return this.LastBuildDateField;
            }
            set {
                if ((this.LastBuildDateField.Equals(value) != true)) {
                    this.LastBuildDateField = value;
                    this.RaisePropertyChanged("LastBuildDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ManagingEditor {
            get {
                return this.ManagingEditorField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagingEditorField, value) != true)) {
                    this.ManagingEditorField = value;
                    this.RaisePropertyChanged("ManagingEditor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PubDate {
            get {
                return this.PubDateField;
            }
            set {
                if ((this.PubDateField.Equals(value) != true)) {
                    this.PubDateField = value;
                    this.RaisePropertyChanged("PubDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Rating {
            get {
                return this.RatingField;
            }
            set {
                if ((object.ReferenceEquals(this.RatingField, value) != true)) {
                    this.RatingField = value;
                    this.RaisePropertyChanged("Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssCategory> RssCategory {
            get {
                return this.RssCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.RssCategoryField, value) != true)) {
                    this.RssCategoryField = value;
                    this.RaisePropertyChanged("RssCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long RssItems {
            get {
                return this.RssItemsField;
            }
            set {
                if ((this.RssItemsField.Equals(value) != true)) {
                    this.RssItemsField = value;
                    this.RaisePropertyChanged("RssItems");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RssLink {
            get {
                return this.RssLinkField;
            }
            set {
                if ((object.ReferenceEquals(this.RssLinkField, value) != true)) {
                    this.RssLinkField = value;
                    this.RaisePropertyChanged("RssLink");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.SkipDays> SkipDays {
            get {
                return this.SkipDaysField;
            }
            set {
                if ((object.ReferenceEquals(this.SkipDaysField, value) != true)) {
                    this.SkipDaysField = value;
                    this.RaisePropertyChanged("SkipDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.SkipHours> SkipHours {
            get {
                return this.SkipHoursField;
            }
            set {
                if ((object.ReferenceEquals(this.SkipHoursField, value) != true)) {
                    this.SkipHoursField = value;
                    this.RaisePropertyChanged("SkipHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chupachupa_WebApp.PrivateService.TextInput TextInput {
            get {
                return this.TextInputField;
            }
            set {
                if ((object.ReferenceEquals(this.TextInputField, value) != true)) {
                    this.TextInputField = value;
                    this.RaisePropertyChanged("TextInput");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Ttl {
            get {
                return this.TtlField;
            }
            set {
                if ((this.TtlField.Equals(value) != true)) {
                    this.TtlField = value;
                    this.RaisePropertyChanged("Ttl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WebMaster {
            get {
                return this.WebMasterField;
            }
            set {
                if ((object.ReferenceEquals(this.WebMasterField, value) != true)) {
                    this.WebMasterField = value;
                    this.RaisePropertyChanged("WebMaster");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cloud", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class Cloud : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProtocolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegisterProcedureField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Port {
            get {
                return this.PortField;
            }
            set {
                if ((this.PortField.Equals(value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Protocol {
            get {
                return this.ProtocolField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolField, value) != true)) {
                    this.ProtocolField = value;
                    this.RaisePropertyChanged("Protocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegisterProcedure {
            get {
                return this.RegisterProcedureField;
            }
            set {
                if ((object.ReferenceEquals(this.RegisterProcedureField, value) != true)) {
                    this.RegisterProcedureField = value;
                    this.RaisePropertyChanged("RegisterProcedure");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Image", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class Image : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Height {
            get {
                return this.HeightField;
            }
            set {
                if ((this.HeightField.Equals(value) != true)) {
                    this.HeightField = value;
                    this.RaisePropertyChanged("Height");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TextInput", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class TextInput : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RssCategory", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class RssCategory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkipDays", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class SkipDays : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Day {
            get {
                return this.DayField;
            }
            set {
                if ((object.ReferenceEquals(this.DayField, value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SkipHours", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class SkipHours : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short HourField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short Hour {
            get {
                return this.HourField;
            }
            set {
                if ((this.HourField.Equals(value) != true)) {
                    this.HourField = value;
                    this.RaisePropertyChanged("Hour");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RssItem", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class RssItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chupachupa_WebApp.PrivateService.Enclosure EnclosureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> PubDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssCategory> RssCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Chupachupa_WebApp.PrivateService.Source SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chupachupa_WebApp.PrivateService.Enclosure Enclosure {
            get {
                return this.EnclosureField;
            }
            set {
                if ((object.ReferenceEquals(this.EnclosureField, value) != true)) {
                    this.EnclosureField = value;
                    this.RaisePropertyChanged("Enclosure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((object.ReferenceEquals(this.GuidField, value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRead {
            get {
                return this.IsReadField;
            }
            set {
                if ((this.IsReadField.Equals(value) != true)) {
                    this.IsReadField = value;
                    this.RaisePropertyChanged("IsRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> PubDate {
            get {
                return this.PubDateField;
            }
            set {
                if ((this.PubDateField.Equals(value) != true)) {
                    this.PubDateField = value;
                    this.RaisePropertyChanged("PubDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssCategory> RssCategory {
            get {
                return this.RssCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.RssCategoryField, value) != true)) {
                    this.RssCategoryField = value;
                    this.RaisePropertyChanged("RssCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Chupachupa_WebApp.PrivateService.Source Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enclosure", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class Enclosure : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Source", Namespace="http://schemas.datacontract.org/2004/07/ChupaChupa.Service.Message")]
    [System.SerializableAttribute()]
    public partial class Source : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdEntityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdEntity {
            get {
                return this.IdEntityField;
            }
            set {
                if ((this.IdEntityField.Equals(value) != true)) {
                    this.IdEntityField = value;
                    this.RaisePropertyChanged("IdEntity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PrivateService.IServiceContract", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/authenticate", ReplyAction="http://tempuri.org/IServiceContract/authenticateResponse")]
        void authenticate(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/authenticate", ReplyAction="http://tempuri.org/IServiceContract/authenticateResponse")]
        System.Threading.Tasks.Task authenticateAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IServiceContract/disconnect")]
        void disconnect();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IServiceContract/disconnect")]
        System.Threading.Tasks.Task disconnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getUserId", ReplyAction="http://tempuri.org/IServiceContract/getUserIdResponse")]
        long getUserId();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getUserId", ReplyAction="http://tempuri.org/IServiceContract/getUserIdResponse")]
        System.Threading.Tasks.Task<long> getUserIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IServiceContract/changePassword", ReplyAction="http://tempuri.org/IServiceContract/changePasswordResponse")]
        void changePassword(string password);
        
        [System.ServiceModel.OperationContractAttribute(IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IServiceContract/changePassword", ReplyAction="http://tempuri.org/IServiceContract/changePasswordResponse")]
        System.Threading.Tasks.Task changePasswordAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getCategories", ReplyAction="http://tempuri.org/IServiceContract/getCategoriesResponse")]
        System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.Category> getCategories();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getCategories", ReplyAction="http://tempuri.org/IServiceContract/getCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.Category>> getCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getCategoryById", ReplyAction="http://tempuri.org/IServiceContract/getCategoryByIdResponse")]
        Chupachupa_WebApp.PrivateService.Category getCategoryById(long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getCategoryById", ReplyAction="http://tempuri.org/IServiceContract/getCategoryByIdResponse")]
        System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.Category> getCategoryByIdAsync(long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/addCategory", ReplyAction="http://tempuri.org/IServiceContract/addCategoryResponse")]
        Chupachupa_WebApp.PrivateService.Category addCategory(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/addCategory", ReplyAction="http://tempuri.org/IServiceContract/addCategoryResponse")]
        System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.Category> addCategoryAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/dropCategoryWithId", ReplyAction="http://tempuri.org/IServiceContract/dropCategoryWithIdResponse")]
        void dropCategoryWithId(long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/dropCategoryWithId", ReplyAction="http://tempuri.org/IServiceContract/dropCategoryWithIdResponse")]
        System.Threading.Tasks.Task dropCategoryWithIdAsync(long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/dropCategoryWithCategoryName", ReplyAction="http://tempuri.org/IServiceContract/dropCategoryWithCategoryNameResponse")]
        void dropCategoryWithCategoryName(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/dropCategoryWithCategoryName", ReplyAction="http://tempuri.org/IServiceContract/dropCategoryWithCategoryNameResponse")]
        System.Threading.Tasks.Task dropCategoryWithCategoryNameAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/renameCategory", ReplyAction="http://tempuri.org/IServiceContract/renameCategoryResponse")]
        void renameCategory(long idCategory, string newName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/renameCategory", ReplyAction="http://tempuri.org/IServiceContract/renameCategoryResponse")]
        System.Threading.Tasks.Task renameCategoryAsync(long idCategory, string newName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssChannels", ReplyAction="http://tempuri.org/IServiceContract/getRssChannelsResponse")]
        System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel> getRssChannels();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssChannels", ReplyAction="http://tempuri.org/IServiceContract/getRssChannelsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel>> getRssChannelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssChannelsInCategoryWithIdCategory", ReplyAction="http://tempuri.org/IServiceContract/getRssChannelsInCategoryWithIdCategoryRespons" +
            "e")]
        System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel> getRssChannelsInCategoryWithIdCategory(long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssChannelsInCategoryWithIdCategory", ReplyAction="http://tempuri.org/IServiceContract/getRssChannelsInCategoryWithIdCategoryRespons" +
            "e")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel>> getRssChannelsInCategoryWithIdCategoryAsync(long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssChannelsInCategoryWithCategoryName", ReplyAction="http://tempuri.org/IServiceContract/getRssChannelsInCategoryWithCategoryNameRespo" +
            "nse")]
        System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel> getRssChannelsInCategoryWithCategoryName(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssChannelsInCategoryWithCategoryName", ReplyAction="http://tempuri.org/IServiceContract/getRssChannelsInCategoryWithCategoryNameRespo" +
            "nse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel>> getRssChannelsInCategoryWithCategoryNameAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getChannelById", ReplyAction="http://tempuri.org/IServiceContract/getChannelByIdResponse")]
        Chupachupa_WebApp.PrivateService.RssChannel getChannelById(long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getChannelById", ReplyAction="http://tempuri.org/IServiceContract/getChannelByIdResponse")]
        System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.RssChannel> getChannelByIdAsync(long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/addChannelInCategoryWithIdCategory", ReplyAction="http://tempuri.org/IServiceContract/addChannelInCategoryWithIdCategoryResponse")]
        Chupachupa_WebApp.PrivateService.RssChannel addChannelInCategoryWithIdCategory(string channelUrl, long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/addChannelInCategoryWithIdCategory", ReplyAction="http://tempuri.org/IServiceContract/addChannelInCategoryWithIdCategoryResponse")]
        System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.RssChannel> addChannelInCategoryWithIdCategoryAsync(string channelUrl, long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/addChannelInCategoryWithCategoryName", ReplyAction="http://tempuri.org/IServiceContract/addChannelInCategoryWithCategoryNameResponse")]
        Chupachupa_WebApp.PrivateService.RssChannel addChannelInCategoryWithCategoryName(string channelUrl, string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/addChannelInCategoryWithCategoryName", ReplyAction="http://tempuri.org/IServiceContract/addChannelInCategoryWithCategoryNameResponse")]
        System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.RssChannel> addChannelInCategoryWithCategoryNameAsync(string channelUrl, string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/moveChannelToCategory", ReplyAction="http://tempuri.org/IServiceContract/moveChannelToCategoryResponse")]
        void moveChannelToCategory(long oldCategoryId, long newCategoryId, long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/moveChannelToCategory", ReplyAction="http://tempuri.org/IServiceContract/moveChannelToCategoryResponse")]
        System.Threading.Tasks.Task moveChannelToCategoryAsync(long oldCategoryId, long newCategoryId, long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/dropChannel", ReplyAction="http://tempuri.org/IServiceContract/dropChannelResponse")]
        void dropChannel(long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/dropChannel", ReplyAction="http://tempuri.org/IServiceContract/dropChannelResponse")]
        System.Threading.Tasks.Task dropChannelAsync(long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/dropChannelFromCategory", ReplyAction="http://tempuri.org/IServiceContract/dropChannelFromCategoryResponse")]
        void dropChannelFromCategory(long idCategory, long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/dropChannelFromCategory", ReplyAction="http://tempuri.org/IServiceContract/dropChannelFromCategoryResponse")]
        System.Threading.Tasks.Task dropChannelFromCategoryAsync(long idCategory, long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/setChannelAsRead", ReplyAction="http://tempuri.org/IServiceContract/setChannelAsReadResponse")]
        void setChannelAsRead(long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/setChannelAsRead", ReplyAction="http://tempuri.org/IServiceContract/setChannelAsReadResponse")]
        System.Threading.Tasks.Task setChannelAsReadAsync(long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/setChannelAsUnread", ReplyAction="http://tempuri.org/IServiceContract/setChannelAsUnreadResponse")]
        void setChannelAsUnread(long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/setChannelAsUnread", ReplyAction="http://tempuri.org/IServiceContract/setChannelAsUnreadResponse")]
        System.Threading.Tasks.Task setChannelAsUnreadAsync(long idChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssItemsWithChannelId", ReplyAction="http://tempuri.org/IServiceContract/getRssItemsWithChannelIdResponse")]
        System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssItem> getRssItemsWithChannelId(long idRssChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssItemsWithChannelId", ReplyAction="http://tempuri.org/IServiceContract/getRssItemsWithChannelIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssItem>> getRssItemsWithChannelIdAsync(long idRssChannel);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssItemsWithCategoryId", ReplyAction="http://tempuri.org/IServiceContract/getRssItemsWithCategoryIdResponse")]
        System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssItem> getRssItemsWithCategoryId(long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssItemsWithCategoryId", ReplyAction="http://tempuri.org/IServiceContract/getRssItemsWithCategoryIdResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssItem>> getRssItemsWithCategoryIdAsync(long idCategory);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssItemById", ReplyAction="http://tempuri.org/IServiceContract/getRssItemByIdResponse")]
        Chupachupa_WebApp.PrivateService.RssItem getRssItemById(long idRssItem);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/getRssItemById", ReplyAction="http://tempuri.org/IServiceContract/getRssItemByIdResponse")]
        System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.RssItem> getRssItemByIdAsync(long idRssItem);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/setItemAsRead", ReplyAction="http://tempuri.org/IServiceContract/setItemAsReadResponse")]
        void setItemAsRead(long idRssItem);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/setItemAsRead", ReplyAction="http://tempuri.org/IServiceContract/setItemAsReadResponse")]
        System.Threading.Tasks.Task setItemAsReadAsync(long idRssItem);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/setItemAsUnread", ReplyAction="http://tempuri.org/IServiceContract/setItemAsUnreadResponse")]
        void setItemAsUnread(long idRssItem);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://tempuri.org/IServiceContract/setItemAsUnread", ReplyAction="http://tempuri.org/IServiceContract/setItemAsUnreadResponse")]
        System.Threading.Tasks.Task setItemAsUnreadAsync(long idRssItem);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceContractChannel : Chupachupa_WebApp.PrivateService.IServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceContractClient : System.ServiceModel.ClientBase<Chupachupa_WebApp.PrivateService.IServiceContract>, Chupachupa_WebApp.PrivateService.IServiceContract {
        
        public ServiceContractClient() {
        }
        
        public ServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void authenticate(string login, string password) {
            base.Channel.authenticate(login, password);
        }
        
        public System.Threading.Tasks.Task authenticateAsync(string login, string password) {
            return base.Channel.authenticateAsync(login, password);
        }
        
        public void disconnect() {
            base.Channel.disconnect();
        }
        
        public System.Threading.Tasks.Task disconnectAsync() {
            return base.Channel.disconnectAsync();
        }
        
        public long getUserId() {
            return base.Channel.getUserId();
        }
        
        public System.Threading.Tasks.Task<long> getUserIdAsync() {
            return base.Channel.getUserIdAsync();
        }
        
        public void changePassword(string password) {
            base.Channel.changePassword(password);
        }
        
        public System.Threading.Tasks.Task changePasswordAsync(string password) {
            return base.Channel.changePasswordAsync(password);
        }
        
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.Category> getCategories() {
            return base.Channel.getCategories();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.Category>> getCategoriesAsync() {
            return base.Channel.getCategoriesAsync();
        }
        
        public Chupachupa_WebApp.PrivateService.Category getCategoryById(long idCategory) {
            return base.Channel.getCategoryById(idCategory);
        }
        
        public System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.Category> getCategoryByIdAsync(long idCategory) {
            return base.Channel.getCategoryByIdAsync(idCategory);
        }
        
        public Chupachupa_WebApp.PrivateService.Category addCategory(string categoryName) {
            return base.Channel.addCategory(categoryName);
        }
        
        public System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.Category> addCategoryAsync(string categoryName) {
            return base.Channel.addCategoryAsync(categoryName);
        }
        
        public void dropCategoryWithId(long idCategory) {
            base.Channel.dropCategoryWithId(idCategory);
        }
        
        public System.Threading.Tasks.Task dropCategoryWithIdAsync(long idCategory) {
            return base.Channel.dropCategoryWithIdAsync(idCategory);
        }
        
        public void dropCategoryWithCategoryName(string categoryName) {
            base.Channel.dropCategoryWithCategoryName(categoryName);
        }
        
        public System.Threading.Tasks.Task dropCategoryWithCategoryNameAsync(string categoryName) {
            return base.Channel.dropCategoryWithCategoryNameAsync(categoryName);
        }
        
        public void renameCategory(long idCategory, string newName) {
            base.Channel.renameCategory(idCategory, newName);
        }
        
        public System.Threading.Tasks.Task renameCategoryAsync(long idCategory, string newName) {
            return base.Channel.renameCategoryAsync(idCategory, newName);
        }
        
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel> getRssChannels() {
            return base.Channel.getRssChannels();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel>> getRssChannelsAsync() {
            return base.Channel.getRssChannelsAsync();
        }
        
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel> getRssChannelsInCategoryWithIdCategory(long idCategory) {
            return base.Channel.getRssChannelsInCategoryWithIdCategory(idCategory);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel>> getRssChannelsInCategoryWithIdCategoryAsync(long idCategory) {
            return base.Channel.getRssChannelsInCategoryWithIdCategoryAsync(idCategory);
        }
        
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel> getRssChannelsInCategoryWithCategoryName(string categoryName) {
            return base.Channel.getRssChannelsInCategoryWithCategoryName(categoryName);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssChannel>> getRssChannelsInCategoryWithCategoryNameAsync(string categoryName) {
            return base.Channel.getRssChannelsInCategoryWithCategoryNameAsync(categoryName);
        }
        
        public Chupachupa_WebApp.PrivateService.RssChannel getChannelById(long idChannel) {
            return base.Channel.getChannelById(idChannel);
        }
        
        public System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.RssChannel> getChannelByIdAsync(long idChannel) {
            return base.Channel.getChannelByIdAsync(idChannel);
        }
        
        public Chupachupa_WebApp.PrivateService.RssChannel addChannelInCategoryWithIdCategory(string channelUrl, long idCategory) {
            return base.Channel.addChannelInCategoryWithIdCategory(channelUrl, idCategory);
        }
        
        public System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.RssChannel> addChannelInCategoryWithIdCategoryAsync(string channelUrl, long idCategory) {
            return base.Channel.addChannelInCategoryWithIdCategoryAsync(channelUrl, idCategory);
        }
        
        public Chupachupa_WebApp.PrivateService.RssChannel addChannelInCategoryWithCategoryName(string channelUrl, string categoryName) {
            return base.Channel.addChannelInCategoryWithCategoryName(channelUrl, categoryName);
        }
        
        public System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.RssChannel> addChannelInCategoryWithCategoryNameAsync(string channelUrl, string categoryName) {
            return base.Channel.addChannelInCategoryWithCategoryNameAsync(channelUrl, categoryName);
        }
        
        public void moveChannelToCategory(long oldCategoryId, long newCategoryId, long idChannel) {
            base.Channel.moveChannelToCategory(oldCategoryId, newCategoryId, idChannel);
        }
        
        public System.Threading.Tasks.Task moveChannelToCategoryAsync(long oldCategoryId, long newCategoryId, long idChannel) {
            return base.Channel.moveChannelToCategoryAsync(oldCategoryId, newCategoryId, idChannel);
        }
        
        public void dropChannel(long idChannel) {
            base.Channel.dropChannel(idChannel);
        }
        
        public System.Threading.Tasks.Task dropChannelAsync(long idChannel) {
            return base.Channel.dropChannelAsync(idChannel);
        }
        
        public void dropChannelFromCategory(long idCategory, long idChannel) {
            base.Channel.dropChannelFromCategory(idCategory, idChannel);
        }
        
        public System.Threading.Tasks.Task dropChannelFromCategoryAsync(long idCategory, long idChannel) {
            return base.Channel.dropChannelFromCategoryAsync(idCategory, idChannel);
        }
        
        public void setChannelAsRead(long idChannel) {
            base.Channel.setChannelAsRead(idChannel);
        }
        
        public System.Threading.Tasks.Task setChannelAsReadAsync(long idChannel) {
            return base.Channel.setChannelAsReadAsync(idChannel);
        }
        
        public void setChannelAsUnread(long idChannel) {
            base.Channel.setChannelAsUnread(idChannel);
        }
        
        public System.Threading.Tasks.Task setChannelAsUnreadAsync(long idChannel) {
            return base.Channel.setChannelAsUnreadAsync(idChannel);
        }
        
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssItem> getRssItemsWithChannelId(long idRssChannel) {
            return base.Channel.getRssItemsWithChannelId(idRssChannel);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssItem>> getRssItemsWithChannelIdAsync(long idRssChannel) {
            return base.Channel.getRssItemsWithChannelIdAsync(idRssChannel);
        }
        
        public System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssItem> getRssItemsWithCategoryId(long idCategory) {
            return base.Channel.getRssItemsWithCategoryId(idCategory);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Chupachupa_WebApp.PrivateService.RssItem>> getRssItemsWithCategoryIdAsync(long idCategory) {
            return base.Channel.getRssItemsWithCategoryIdAsync(idCategory);
        }
        
        public Chupachupa_WebApp.PrivateService.RssItem getRssItemById(long idRssItem) {
            return base.Channel.getRssItemById(idRssItem);
        }
        
        public System.Threading.Tasks.Task<Chupachupa_WebApp.PrivateService.RssItem> getRssItemByIdAsync(long idRssItem) {
            return base.Channel.getRssItemByIdAsync(idRssItem);
        }
        
        public void setItemAsRead(long idRssItem) {
            base.Channel.setItemAsRead(idRssItem);
        }
        
        public System.Threading.Tasks.Task setItemAsReadAsync(long idRssItem) {
            return base.Channel.setItemAsReadAsync(idRssItem);
        }
        
        public void setItemAsUnread(long idRssItem) {
            base.Channel.setItemAsUnread(idRssItem);
        }
        
        public System.Threading.Tasks.Task setItemAsUnreadAsync(long idRssItem) {
            return base.Channel.setItemAsUnreadAsync(idRssItem);
        }
    }
}
