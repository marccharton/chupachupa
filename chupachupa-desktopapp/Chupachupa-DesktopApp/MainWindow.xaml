<controls:MetroWindow
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Chupachupa_DesktopApp.MainWindow"
    xmlns:ns="clr-namespace:Chupachupa_DesktopApp.ViewModel"
    Title="ChupaChupa" 
    Height="600" Width="800" MinWidth="650" MinHeight="470"
    ShowIconOnTitleBar="True" 
    EnableDWMDropShadow="True" 
    WindowStartupLocation="CenterScreen" 
    WindowTransitionsEnabled="False">
    
    <controls:MetroWindow.DataContext>
        <ns:ViewModelDataSource />
    </controls:MetroWindow.DataContext>
    <controls:MetroWindow.Resources>
        <ns:InvertBoolConverter x:Key="InvertBoolConverter"/>
        <DataTemplate x:Key="FlyoutCategoryListItemTemplate">
        	<Grid Width="Auto" Height="Auto">
        		<TextBlock TextWrapping="Wrap" Text="{Binding Name}"/>
        	</Grid>
        </DataTemplate>
 
        <ResourceDictionary x:Key="Dictionary">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Assets/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilty" />

        <Ellipse x:Key="AppThemeMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     StrokeThickness="1"
                     Stroke="{Binding BorderColorBrush, Mode=OneWay}"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />
        <Ellipse x:Key="AccentMenuIcon"
                     x:Shared="False"
                     Width="16"
                     Height="16"
                     Fill="{Binding ColorBrush, Mode=OneWay}" />

        <Style x:Key="AppThemeMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
            <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
            <Setter Property="Icon"
                        Value="{StaticResource AppThemeMenuIcon}" />
            <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
        </Style>
        <Style x:Key="AccentColorMenuItemStyle"
                   TargetType="{x:Type MenuItem}"
                   BasedOn="{StaticResource MetroMenuItem}">
            <Setter Property="Command"
                        Value="{Binding ChangeAccentCommand}" />
            <Setter Property="Icon"
                        Value="{StaticResource AccentMenuIcon}" />
            <Setter Property="Header"
                        Value="{Binding Name, Mode=OneWay}" />
        </Style>
        <Style x:Key="ViewerInfosText" TargetType="{x:Type TextBlock}">
        	<Setter Property="TextWrapping" Value="NoWrap"/>
        	<Setter Property="TextTrimming" Value="None"/>
        	<Setter Property="FontFamily" Value="Segoe UI Semibold"/>
        	<Setter Property="FontWeight" Value="Bold"/>
        	<Setter Property="FontSize" Value="16"/>
        	<Setter Property="Width" Value="Auto"/>
        </Style>

        <!--<Style x:Key="TestVisibleStyle" TargetType="TabItem">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>-->
        
    </controls:MetroWindow.Resources>

    <!--********************************************************************************************************************************************
    ************************************************************** FLYOUTS *********************************************************************-->
    
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout x:Name="AddCategoryFlyout" 
                             Header="Add Category"
                             Position="Right"
                             Theme="Accent" 
                             IsOpen="{Binding IsFlyoutAddCategoryOpenned}" 
                             Panel.ZIndex="47" 
                             Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, Path=ActualWidth}">
                <Grid Margin="10"
                      Width="400">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5" ><Run Text="Name"/></TextBlock>
                        <TextBox TextWrapping="Wrap" HorizontalAlignment="Left" Width="200" Margin="0,5" Text="{Binding CurrentCategory.Name}"/>
                        <TextBlock x:Name="AddCategoryMessage" TextWrapping="Wrap" Text="{Binding FlyoutMessage}" />
                    </StackPanel>
                    <controls:ProgressRing IsActive="{Binding IsProgressRingActive}" Margin="0,10" Width="200" Height="200" Foreground="{DynamicResource WhiteColorBrush}"/>
                    <Button x:Name="AddCategoryOkButton" Content="OK" Command="{Binding AddCategoryCmdValidate}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>
                    <!--<Button x:Name="AddChannelCancelButton" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>-->
                </Grid>
            </controls:Flyout>
            <controls:Flyout x:Name="EditCategorylFlyout" 
                             Header="Edit Category" 
                             Position="Right" 
                             Theme="Accent" 
                             Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, Path=ActualWidth}"
                             IsOpen="{Binding IsFlyoutEditCategoryOpenned}" 
                             Panel.ZIndex="47" >
                <Grid Margin="10"
                      Width="400">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5" ><Run Text="Name"/></TextBlock>
                        <TextBox TextWrapping="Wrap" HorizontalAlignment="Left" Width="200" Margin="0,5" Text="{Binding CurrentCategory.Name}"/>
                        <TextBlock x:Name="EditCategoryMessage" TextWrapping="Wrap" Text="{Binding FlyoutMessage}" />
                    </StackPanel>
                    <controls:ProgressRing IsActive="{Binding IsProgressRingActive}" Margin="0,10" Width="200" Height="200" Foreground="{DynamicResource WhiteColorBrush}"/>
                    <Button x:Name="EditCategoryOkButton" Content="OK" Command="{Binding EditCategoryCmdValidate}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10" />
                    <!--<Button x:Name="EditChannelCancelButton" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>-->
                </Grid>
            </controls:Flyout>
            
            <controls:Flyout x:Name="AddChannelFlyout" Header="Add Channel"
                             Position="Right"
                             Theme="Accent" 
                             IsOpen="{Binding IsFlyoutAddChannelOpenned}" 
                             Panel.ZIndex="47" 
                             Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, Path=ActualWidth}">
                <Grid Margin="10"
                      Width="400">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5" ><Run Text="Link"/></TextBlock>
                        <TextBox TextWrapping="Wrap" HorizontalAlignment="Left" Width="200" Margin="0,5" Text="{Binding CurrentChannel.RssLink}"/>
                        <TextBlock x:Name="AddChannelMessage" TextWrapping="Wrap" Text="{Binding FlyoutMessage}"/>
                    </StackPanel>
                    <controls:ProgressRing IsActive="{Binding IsProgressRingActive}" Margin="0,10" Width="200" Height="200" Foreground="{DynamicResource WhiteColorBrush}"/>
                    <Button x:Name="AddChannelOkButton" Content="OK" Command="{Binding AddChannelCmdValidate}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>
                    <!--<Button x:Name="AddChannelCancelButton" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>-->
                </Grid>
            </controls:Flyout>
            <controls:Flyout x:Name="EditChannelFlyout" Header="Edit Channel"
                             Position="Right" 
                             Theme="Accent" 
                             Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, Path=ActualWidth}"
                             IsOpen="{Binding IsFlyoutEditChannelOpenned}" 
                             Panel.ZIndex="47" >
                <Grid Margin="10"
                      Width="400">
                    <StackPanel>
                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5" Text="Category" />
                        <ComboBox x:Name="EditChannelFlyoutCategoryList" HorizontalAlignment="Left" Width="200" SelectedItem="{Binding NewCategoryForChannel}" ItemsSource="{Binding CategoryList}" ItemTemplate="{DynamicResource FlyoutCategoryListItemTemplate}"/>
                        <TextBlock x:Name="EditChannelMessage" TextWrapping="Wrap" Text="{Binding FlyoutMessage}" />
                    </StackPanel>
                    <controls:ProgressRing IsActive="{Binding IsProgressRingActive}" Margin="0,10" Width="200" Height="200" Foreground="{DynamicResource WhiteColorBrush}"/>
                    <Button x:Name="EditChannelOkButton" Content="OK" Command="{Binding EditChannelCmdValidate}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10" />
                    <!--<Button x:Name="EditChannelCancelButton" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>-->
                </Grid>
            </controls:Flyout>
            
            <controls:Flyout x:Name="CreateAccountFlyout" Header="Settings"
                             Position="Right"
                             Theme="Accent"  
                             Panel.ZIndex="47" 
                             IsOpen="{Binding IsFlyoutCreateAccountOppenned}" 
                             Height="600px"
                             Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, Path=ActualWidth}">
                <Grid Margin="10"
                      Width="400">
                    <StackPanel>
                        <StackPanel.InputBindings>
                            <KeyBinding Command="{Binding CreateAccountCmdValidate}"  Key="Enter"/>
                        </StackPanel.InputBindings>
                        <TextBlock x:Name="Login" TextWrapping="Wrap" Text="Login"/>
                        <TextBox x:Name="CreateAccountLogin" Height="23" TextWrapping="Wrap" Text="{Binding CreateAccountLoginText}"/>
                        <TextBlock x:Name="Password" TextWrapping="Wrap" Text="Password"/>
                        <TextBox x:Name="CreateAccountPass" Height="23" TextWrapping="Wrap" Text="{Binding CreateAccountPasswordText}"/>
                        <TextBlock x:Name="PasswordCheck" TextWrapping="Wrap" Text="Password Again"/>
                        <TextBox x:Name="CreateAccountPassCheck" Height="23" TextWrapping="Wrap" Text="{Binding CreateAccountPasswordCheckText}"/>
                        <TextBlock x:Name="CreateAccountMessageError" TextWrapping="Wrap" Text="{Binding CreateAccountMessage}"/>
                    </StackPanel>
                    <Button x:Name="CreateAccountOkButton" Content="OK" Command="{Binding CreateAccountCmdValidate}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>
                    <!--<Button x:Name="AddChannelCancelButton" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>-->
                </Grid>
            </controls:Flyout>

            <controls:Flyout x:Name="SettingsFlyout" Header="Settings"
                             Position="Right"
                             Theme="Accent"  Panel.ZIndex="47" IsOpen="{Binding IsSettingsFloutOppenned}" Width="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:MetroWindow}, Path=ActualWidth}">
                <Grid Margin="10"
                      Width="400">
                    <StackPanel>
                        <controls:ToggleSwitch IsChecked="{Binding Path=IsOn, Mode=TwoWay}" Header="Connected Mode" IsEnabled="False" />
                        <StackPanel.InputBindings>
                            <KeyBinding Command="{Binding ViewSettingsCmdValidate}"  Key="Enter"/>
                        </StackPanel.InputBindings>
                    </StackPanel>
                    <Button x:Name="SettingsOkButton" Content="OK" Command="{Binding ViewSettingsCmdValidate}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>
                    <!--<Button x:Name="AddChannelCancelButton" Content="Cancel" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="75" Margin="0,0,10,10"/>-->
                </Grid>
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>

    <!--*********************************************************** Fin de FLYOUTS ********************************************************************
    ***********************************************************************************************************************************************-->

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="488*" />
            <RowDefinition Height="30*"/>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Menu Grid.Row="0"
                  Margin="5,5,0,5"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Left">
            <MenuItem Header="User">
                <MenuItem Header="Log OUT" IsEnabled="{Binding IsLoggedIn}"  Command="{Binding LogUserCmd}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="Assets/img/ico/logOUT.ico" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Exit" Command="{Binding ExitCmd}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="Assets/img/ico/exit.ico" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Style">
                <MenuItem Header="Theme"
                          ItemsSource="{Binding AppThemes, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource AppThemeMenuItemStyle}">
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="Assets/img/ico/design.ico" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Accent"
                          ItemsSource="{Binding AccentColors, Mode=OneWay}"
                          ItemContainerStyle="{StaticResource AccentColorMenuItemStyle}" >
                    <MenuItem.Icon>
                        <Image Width="16" Height="16" Source="Assets/img/ico/design.ico" />
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="Add Category" Command="{Binding AddCategoryCmd}" IsEnabled="{Binding IsOn}" Visibility="{Binding Path=IsLoggedIn, Converter={StaticResource BooleanToVisibilty}}" />
            <MenuItem Header="All Items" Command="{Binding LoadAllItemsCmd}" Visibility="{Binding Path=IsLoggedIn, Converter={StaticResource BooleanToVisibilty}}"/>
            
        </Menu>


        <TabControl Grid.Row="1" x:Name="MainTabControl" SelectedIndex="{Binding SelectedTabIndex}" IsEnabled="{Binding IsTabControlEnabled}">
           
            <TabItem x:Name="Account" 
                     Header="Account">
                <Grid>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Width="371.5">
                        <Image Source="Assets/img/logo.png" HorizontalAlignment="Center" Height="227.5"/>
                        <TextBox x:Name="AccountLoginTextBox" Text="{Binding AccountLoginText}" IsEnabled="{Binding Path=IsLoggedIn, Converter={StaticResource InvertBoolConverter}}" controls:TextBoxHelper.Watermark="Login" HorizontalAlignment="Center" Height="23" TextWrapping="Wrap" VerticalAlignment="Top" Width="120" />
                        <TextBox x:Name="AccountPassTextBox" Text="{Binding AccountPasswordText}" IsEnabled="{Binding Path=IsLoggedIn, Converter={StaticResource InvertBoolConverter}}" controls:TextBoxHelper.Watermark="Password"  HorizontalAlignment="Center" Height="23" VerticalAlignment="Top" Width="120" Margin="0,5,0,5"/>
                        <!--<PasswordBox x:Name="AccountPassTextBox" IsEnabled="{Binding Path=IsLoggedIn, Converter={StaticResource InvertBoolConverter}}" controls:TextBoxHelper.Watermark="Password"  HorizontalAlignment="Center" Height="23" VerticalAlignment="Top" Width="120" Margin="0,5,0,5"/>-->
                        <Button x:Name="AccountButton" Command="{Binding LogUserCmd}" Content="{Binding LogMessage}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="120" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="0,5,0,5"/>
                        <Button x:Name="AccountCreateButton"  Command="{Binding CreateAccountCmd}" HorizontalAlignment="Center" VerticalAlignment="Top" Width="120" Style="{DynamicResource AccentedSquareButtonStyle}" Margin="125.75,0,125.75,5" Content="Create Account"/>
                        <controls:ProgressRing IsActive="{Binding IsProgressRingActive}" Margin="0,10" Width="47" Height="47"/>
                        <!--CommandParameter="{Binding ElementName=AccountPassTextBox}"-->
                        <TextBlock x:Name="ErrorText" TextWrapping="Wrap" Text="{Binding ConnectionErrorText}" Height="16" HorizontalAlignment="Center"/>
                        <StackPanel.InputBindings>
                            <KeyBinding Command="{Binding LogUserCmd}"  Key="Enter"/>
                            <!--<KeyBinding Command="{Binding RealDeleteFileCMD}"  Key="Delete" Modifiers="Shift"/>-->
                        </StackPanel.InputBindings>
                    </StackPanel>
                </Grid>
            </TabItem>


            <TabItem x:Name="Categories" 
                     Header="Categories" 
                     Visibility="{Binding Path=IsLoggedIn, Converter={StaticResource BooleanToVisibilty}}">
                <Grid x:Name="CategoryMainContainer">
                    <!--<Button x:Name="CategoryEditButton" Command="{Binding EditCategoryCmd}" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource SquareButtonStyle}" Height="28" Margin="10,10,0,0" Width="60"/>-->
                    <Label x:Name="CategoriesTitle" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,10,0,0" Height="53.46" FontFamily="Segoe UI Semibold" FontSize="29.333" Content="Categories List"/>
                    <Button Content="All" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="219.79,23.333,0,0" Width="47" Command="{Binding LoadAllCategoriesCmd}"/>

                    <!--<Button x:Name="CategoryEditButton" Command="{Binding EditCategoryCmd}" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource SquareButtonStyle}" Height="28" Margin="10,10,0,0" Width="60"/>-->
                    <Button x:Name="CategoryAddButton" Command="{Binding AddCategoryCmd}" IsEnabled="{Binding IsOn}"  Content="Add" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource SquareButtonStyle}" Margin="14,67,0,0" Height="28" Width="60"/>
                    <!--<Button x:Name="CategoryDeleteButton" Command="{Binding DeleteCategoryCmd}" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource SquareButtonStyle}" Margin="140,10,0,0" Height="28" Width="60"/>-->
                    <ListView x:Name="CategoriesListView" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="10,100,10,10" 
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
						     ItemsSource="{Binding CategoryList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             SelectedItem="{Binding SelectedCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding LoadCategoryCmd}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="IsSelected" Value="True" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="EDIT" Command="{Binding EditCategoryCmd}" IsEnabled="{Binding IsOn}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/edit.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="DELETE" Command="{Binding DeleteCategoryCmd}" IsEnabled="{Binding IsOn}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/delete.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:Tile Title="{Binding Name}" Count="{Binding RssChannels}" TiltFactor="1" Width="147px" Height="147px" Margin="0"/>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                    <controls:ProgressRing IsActive="{Binding IsProgressRingActive}" Margin="0,10" Width="147" Height="147"/>
                </Grid>
            </TabItem>


            <TabItem x:Name="Channels" 
                     Header="Channels" 
                     VerticalAlignment="Top" 
                     HorizontalAlignment="Left" 
                     Margin="0,0,-12,-0.001"
                     Visibility="{Binding Path=IsLoggedIn, Converter={StaticResource BooleanToVisibilty}}">
                <Grid>
                    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Top" Height="62" Orientation="Horizontal">
                        <Label x:Name="ChannelsTitle" Content="{Binding ChannelTitleText}" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Segoe UI Semibold" FontSize="29.333" />
                    	<Button x:Name="ChannelsAllButton" Content="All" Command="{Binding LoadAllChannelsCmd}"  Width="47" VerticalAlignment="Center" Margin="10,0,0,0"/>
                    </StackPanel>
                    <!--<Button x:Name="ChannelsEditButton" Command="{Binding EditChannelCmd}" Content="Edit" HorizontalAlignment="Left" VerticalAlignment="Top"  Style="{DynamicResource SquareButtonStyle}" Height="28" Margin="10,68.46,0,0" Width="60"/>-->
                    <Button x:Name="ChannelsAddButton" Command="{Binding AddChannelCmd}" Content="Add" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource SquareButtonStyle}" Margin="9,67,0,0" Height="28" Width="60" IsEnabled="{Binding IsOn}"/>
                    <!--<Button x:Name="ChannelsDeleteButton" Command="{Binding DeleteChannelCmd}" Content="Delete" HorizontalAlignment="Left" VerticalAlignment="Top" Style="{DynamicResource SquareButtonStyle}" Margin="140,68.46,0,0" Height="28" Width="60"/>-->
                    <ListView x:Name="ChannelsListView" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"
						ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
						ItemsSource="{Binding ChannelsList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                        SelectedItem="{Binding SelectedChannel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="10,100,10,10">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding LoadChannelCmd}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="IsSelected" Value="True" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Set as Read" Command="{Binding SetReadChannelCmd}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/check.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Set as Unread" Command="{Binding SetUnreadChannelCmd}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/exit.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="EDIT" Command="{Binding EditChannelCmd}" IsEnabled="{Binding IsOn}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/edit.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="DELETE" Command="{Binding DeleteChannelCmd}" IsEnabled="{Binding IsOn}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/delete.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:Tile Title="{Binding Title}" Count="{Binding RssItems}" TiltFactor="1" Width="147px" Height="147px" Background="#CCD63B19" />
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                    </ListView>
                    <controls:ProgressRing IsActive="{Binding IsProgressRingActive}" Margin="0,10" Width="147" Height="147"/>
                </Grid>
            </TabItem>


            <TabItem x:Name="Items" 
                     Header="Items" 
                     HorizontalAlignment="Left" 
                     VerticalAlignment="Top"
                     Visibility="{Binding Path=IsLoggedIn, Converter={StaticResource BooleanToVisibilty}}">
                <Grid>
                    <Label HorizontalAlignment="Left" Foreground="{DynamicResource BlackBrush}" VerticalAlignment="Top" Margin="10,10,0,0" Height="51.46" Background="#00000000" FontSize="29.333" FontFamily="Segoe UI Semibold" Content="{Binding ItemsTitleText}" Panel.ZIndex="2"/>
                    <ListView x:Name="ArticlesListView" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Margin="10,66.46,10,10"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                              ItemsSource="{Binding ItemsList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                              SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" >
                        <!--<i:Interaction.Behaviors>
                            <ns:MultiSelectionBehavior x:Name="MultiSelectionBehavior" SelectedItems="{Binding SelectedItemsList}"/>
                        </i:Interaction.Behaviors>-->
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding LoadItemCmd}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="{x:Type ListViewItem}">
                                <Style.Triggers>
                                    <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                        <Setter Property="IsSelected" Value="True" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <controls:Tile Title="{Binding Description}" Count="{Binding Title}" TiltFactor="1" Width="Auto" MinWidth="300px" Height="88px" TitleFontSize="10" CountFontSize="14">
                                    <controls:Tile.Style>
                                        <Style TargetType="controls:Tile">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsRead}" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource AccentColorBrush4}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </controls:Tile.Style>
                                </controls:Tile>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Set as Read" Command="{Binding SetReadItemCmd}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/check.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Set as Unread" Command="{Binding SetUnreadItemCmd}">
                                    <MenuItem.Icon>
                                        <Image Width="16" Height="16" Source="Assets/img/ico/exit.ico" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                    </ListView>
                    <controls:ProgressRing IsActive="{Binding IsProgressRingActive}" Margin="0,10" Width="147" Height="147"/>
                </Grid>
            </TabItem>


            <TabItem x:Name="Viewer" 
                     Header="Viewer" 
                     HorizontalAlignment="Left" 
                     Height="39.4733333333333" 
                     VerticalAlignment="Top" 
                     Width="90"
                     Visibility="{Binding Path=IsLoggedIn, Converter={StaticResource BooleanToVisibilty}}">
                <Grid>
                	<Grid.ColumnDefinitions>
                		<ColumnDefinition Width="532*"/>
                		<ColumnDefinition Width="255*"/>
                	</Grid.ColumnDefinitions>
                	<Grid.RowDefinitions>
                		<RowDefinition Height="45*"/>
                		<RowDefinition Height="396*"/>
                		<RowDefinition Height="43*"/>
                	</Grid.RowDefinitions>
                    <TextBlock x:Name="Title" TextWrapping="Wrap" Text="{Binding CurrentItem.Title}" FontWeight="Bold" FontFamily="Segoe UI Semibold" FontSize="21.333" Foreground="{DynamicResource AccentColorBrush2}" HorizontalAlignment="Right" Margin="0,10,10,0" Width="0" Grid.Column="1"/>
                    <RichTextBox x:Name="Description" IsReadOnly="True" FontFamily="Segoe UI Semibold" FontSize="14.667" BorderBrush="{x:Null}" BorderThickness="0" Grid.Row="1" Margin="10" Background="#19878787" RenderTransformOrigin="0.5,0.5" Padding="10,10,1,10">
                    	<FlowDocument>
                    		<Paragraph><Run Text="{Binding CurrentItem.Description}"/></Paragraph>
                    	</FlowDocument>
                    </RichTextBox>
                    <StackPanel Grid.Row="1" Grid.Column="1" Margin="10" Background="#19878787">
                        <TextBlock x:Name="Author" Text="{Binding CurrentItem.Author, Mode=OneWay}" HorizontalAlignment="Right" Style="{DynamicResource ViewerInfosText}" Margin="5" TextWrapping="Wrap"/>
                        <DatePickerTextBox x:Name="PubDate" TextWrapping="Wrap" Text="{Binding CurrentItem.PubDate.Value.Date, Mode=OneWay}" HorizontalAlignment="Right" Margin="5" />
                        <TextBlock x:Name="Link" Text="{Binding CurrentItem.Link, Mode=OneWay}" HorizontalAlignment="Right" Style="{DynamicResource ViewerInfosText}" Margin="5" TextWrapping="Wrap"/>
                        <TextBlock HorizontalAlignment="Right" Width="Auto">
                            <Hyperlink Command="{Binding OpenInBrowserCmd}" NavigateUri="http://www.google.fr" Foreground="{DynamicResource BlackColorBrush}">
                                Plus d'informations
                            </Hyperlink>
                        </TextBlock>
                        <TextBlock x:Name="Guid" Text="{Binding CurrentItem.Guid, Mode=OneWay}" HorizontalAlignment="Right" Style="{DynamicResource ViewerInfosText}" Margin="5" TextWrapping="Wrap"/>
                        <TextBlock x:Name="Comments" Text="{Binding CurrentItem.Comments, Mode=OneWay}" HorizontalAlignment="Right" Style="{DynamicResource ViewerInfosText}" Margin="5" TextWrapping="Wrap"/>
                    </StackPanel>
                    <RichTextBox x:Name="Source" IsReadOnly="True" Foreground="{DynamicResource AccentColorBrush3}" Background="{x:Null}" BorderBrush="{x:Null}" FontWeight="Bold" Margin="10,0,10,10" FontSize="13.333" FontStyle="Italic" BorderThickness="0" Grid.Row="2" Grid.ColumnSpan="2">
                        <FlowDocument>
                            <Paragraph>
                                <Run Text="{Binding CurrentItem.Source.Url}" TextDecorations="Underline" />
                            </Paragraph>
                        </FlowDocument>
                    </RichTextBox>
                   
                </Grid>
            </TabItem>


        </TabControl>

        <StackPanel Grid.Row="1" x:Name="UserPanel" HorizontalAlignment="Right" VerticalAlignment="Top" Orientation="Horizontal" Margin="0,10,10,0">
            <TextBlock x:Name="UserName" Foreground="{DynamicResource BlackBrush}" HorizontalAlignment="Right" TextWrapping="Wrap" VerticalAlignment="Top" FontFamily="Segoe UI Semibold" FontSize="18.667" Text="{Binding CurrentUser.LoginMail}" Margin="0" >
                <Run Language="fr-fr" Text="{Binding CurrentUserName}"/>
            </TextBlock>
        	<Image x:Name="userLogo" HorizontalAlignment="Right" Height="25" VerticalAlignment="Top" Width="25" Source="user.ico" IsManipulationEnabled="True" Margin="5,0,0,0"/>
            <StackPanel.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Log OUT" IsEnabled="{Binding IsLoggedIn}"  Command="{Binding LogUserCmd}">
                        <MenuItem.Icon>
                            <Image Width="16" Height="16" Source="Assets/img/ico/logOUT.ico" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Settings" Command="{Binding ViewSettingsCmd}">
                        <MenuItem.Icon>
                            <Image Width="16" Height="16" Source="Assets/img/ico/settings.ico" />
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </StackPanel.ContextMenu>
        </StackPanel>

        <TextBlock Grid.Row="2" x:Name="DEBUG" 
                   Foreground="{DynamicResource BlackBrush}" 
                   TextWrapping="Wrap" 
                   FontFamily="Segoe UI Semibold" 
                   FontSize="18.667" 
                   Margin="5">
            <Run Language="fr-fr" Text="{Binding DebugText}"/>
        </TextBlock>
        <Button Grid.Row="2" x:Name="DebugButton" 
                Content="[Test Button]"
                Command=""
                MinWidth="90"
                VerticalAlignment="Bottom" 
                HorizontalAlignment="Right" Visibility="Hidden"/>


    </Grid>


</controls:MetroWindow>
