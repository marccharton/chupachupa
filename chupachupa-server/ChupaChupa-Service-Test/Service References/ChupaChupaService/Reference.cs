//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.34014
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChupaChupa.Service.Test.ChupaChupaService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ChupaChupaService.IServiceContract", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/authenticate", ReplyAction="http://tempuri.org/IServiceContract/authenticateResponse")]
        void authenticate(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/authenticate", ReplyAction="http://tempuri.org/IServiceContract/authenticateResponse")]
        System.Threading.Tasks.Task authenticateAsync(string login, string password);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IServiceContract/disonnect")]
        void disonnect();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, IsInitiating=false, Action="http://tempuri.org/IServiceContract/disonnect")]
        System.Threading.Tasks.Task disonnectAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/getUserId", ReplyAction="http://tempuri.org/IServiceContract/getUserIdResponse")]
        long getUserId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/getUserId", ReplyAction="http://tempuri.org/IServiceContract/getUserIdResponse")]
        System.Threading.Tasks.Task<long> getUserIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/changePassword", ReplyAction="http://tempuri.org/IServiceContract/changePasswordResponse")]
        void changePassword(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/changePassword", ReplyAction="http://tempuri.org/IServiceContract/changePasswordResponse")]
        System.Threading.Tasks.Task changePasswordAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/getCategories", ReplyAction="http://tempuri.org/IServiceContract/getCategoriesResponse")]
        ChupaChupa.Entities.Category[] getCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/getCategories", ReplyAction="http://tempuri.org/IServiceContract/getCategoriesResponse")]
        System.Threading.Tasks.Task<ChupaChupa.Entities.Category[]> getCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/addCategory", ReplyAction="http://tempuri.org/IServiceContract/addCategoryResponse")]
        bool addCategory(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/addCategory", ReplyAction="http://tempuri.org/IServiceContract/addCategoryResponse")]
        System.Threading.Tasks.Task<bool> addCategoryAsync(string categoryName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/dropCategory", ReplyAction="http://tempuri.org/IServiceContract/dropCategoryResponse")]
        bool dropCategory(int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/dropCategory", ReplyAction="http://tempuri.org/IServiceContract/dropCategoryResponse")]
        System.Threading.Tasks.Task<bool> dropCategoryAsync(int idCategory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/getRssChannels", ReplyAction="http://tempuri.org/IServiceContract/getRssChannelsResponse")]
        ChupaChupa.Entities.RssChannel[] getRssChannels();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/getRssChannels", ReplyAction="http://tempuri.org/IServiceContract/getRssChannelsResponse")]
        System.Threading.Tasks.Task<ChupaChupa.Entities.RssChannel[]> getRssChannelsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/addChannel", ReplyAction="http://tempuri.org/IServiceContract/addChannelResponse")]
        bool addChannel(string channelUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/addChannel", ReplyAction="http://tempuri.org/IServiceContract/addChannelResponse")]
        System.Threading.Tasks.Task<bool> addChannelAsync(string channelUrl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/dropChannel", ReplyAction="http://tempuri.org/IServiceContract/dropChannelResponse")]
        bool dropChannel(int idChannel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/dropChannel", ReplyAction="http://tempuri.org/IServiceContract/dropChannelResponse")]
        System.Threading.Tasks.Task<bool> dropChannelAsync(int idChannel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/getRssItems", ReplyAction="http://tempuri.org/IServiceContract/getRssItemsResponse")]
        ChupaChupa.Entities.RssItem[] getRssItems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceContract/getRssItems", ReplyAction="http://tempuri.org/IServiceContract/getRssItemsResponse")]
        System.Threading.Tasks.Task<ChupaChupa.Entities.RssItem[]> getRssItemsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceContractChannel : ChupaChupa.Service.Test.ChupaChupaService.IServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceContractClient : System.ServiceModel.ClientBase<ChupaChupa.Service.Test.ChupaChupaService.IServiceContract>, ChupaChupa.Service.Test.ChupaChupaService.IServiceContract {
        
        public ServiceContractClient() {
        }
        
        public ServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void authenticate(string login, string password) {
            base.Channel.authenticate(login, password);
        }
        
        public System.Threading.Tasks.Task authenticateAsync(string login, string password) {
            return base.Channel.authenticateAsync(login, password);
        }
        
        public void disonnect() {
            base.Channel.disonnect();
        }
        
        public System.Threading.Tasks.Task disonnectAsync() {
            return base.Channel.disonnectAsync();
        }
        
        public long getUserId() {
            return base.Channel.getUserId();
        }
        
        public System.Threading.Tasks.Task<long> getUserIdAsync() {
            return base.Channel.getUserIdAsync();
        }
        
        public void changePassword(string password) {
            base.Channel.changePassword(password);
        }
        
        public System.Threading.Tasks.Task changePasswordAsync(string password) {
            return base.Channel.changePasswordAsync(password);
        }
        
        public ChupaChupa.Entities.Category[] getCategories() {
            return base.Channel.getCategories();
        }
        
        public System.Threading.Tasks.Task<ChupaChupa.Entities.Category[]> getCategoriesAsync() {
            return base.Channel.getCategoriesAsync();
        }
        
        public bool addCategory(string categoryName) {
            return base.Channel.addCategory(categoryName);
        }
        
        public System.Threading.Tasks.Task<bool> addCategoryAsync(string categoryName) {
            return base.Channel.addCategoryAsync(categoryName);
        }
        
        public bool dropCategory(int idCategory) {
            return base.Channel.dropCategory(idCategory);
        }
        
        public System.Threading.Tasks.Task<bool> dropCategoryAsync(int idCategory) {
            return base.Channel.dropCategoryAsync(idCategory);
        }
        
        public ChupaChupa.Entities.RssChannel[] getRssChannels() {
            return base.Channel.getRssChannels();
        }
        
        public System.Threading.Tasks.Task<ChupaChupa.Entities.RssChannel[]> getRssChannelsAsync() {
            return base.Channel.getRssChannelsAsync();
        }
        
        public bool addChannel(string channelUrl) {
            return base.Channel.addChannel(channelUrl);
        }
        
        public System.Threading.Tasks.Task<bool> addChannelAsync(string channelUrl) {
            return base.Channel.addChannelAsync(channelUrl);
        }
        
        public bool dropChannel(int idChannel) {
            return base.Channel.dropChannel(idChannel);
        }
        
        public System.Threading.Tasks.Task<bool> dropChannelAsync(int idChannel) {
            return base.Channel.dropChannelAsync(idChannel);
        }
        
        public ChupaChupa.Entities.RssItem[] getRssItems() {
            return base.Channel.getRssItems();
        }
        
        public System.Threading.Tasks.Task<ChupaChupa.Entities.RssItem[]> getRssItemsAsync() {
            return base.Channel.getRssItemsAsync();
        }
    }
}
